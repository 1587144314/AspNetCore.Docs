@page
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@model WebAPI.Test2Model
@{
    Layout = null;
}

@*Must be used with StartupEndPointBugTest*@

<div class="text-center">
    <h1 class="display-4">CORS Test</h1>
</div>


<div>
    <span id='result'></span>
</div>


<form>
    <p>
        Controller: 
        <select name="number" asp-for="Number">
            <option selected="selected" value="1">No-preflight</option>
            <option value="2">Preflight</option>
        </select>

        <input type="submit" value="Set" />
    </p>
</form>

<ul>
    <li>
        <input type="button" value="PUT test"
               onclick="TestCors( '/api/TodoItems' + '@Model.Number' + '/5', 'PUT')" />
    </li>

    <li>
        <input type="button" value="Delete test"
               onclick="TestCors('/api/TodoItems' + '@Model.Number' + '/5', 'DELETE')" />
    </li>

    <li>
        <input type="button" value="Delete [EnableCors]"
               onclick="TestCors('/api/TodoItems' + '@Model.Number' + '/MyDelete2/5', 'DELETE')" />
    </li>

    <li>
        <input type="button" value="GET"
               onclick="TestCors('/api/TodoItems' + '@Model.Number', 'GET')" />
    </li>

    <li>
        <input type="button" value="GET [EnableCors]"
               onclick="TestCors('/api/TodoItems' + '@Model.Number' + '/GetTodoItems2', 'GET')" />
    </li>

</ul>

<script>
    var host = 'https://cors3.azurewebsites.net';

    var protocol = location.protocol;
    var slashes = protocol.concat("//");
    var theHost = slashes.concat(window.location.hostname);

    if (theHost == host) {
        var host = 'https://cors1.azurewebsites.net';
    }

    function TestCors(uri, methodName) {
        const resultSpan = document.getElementById('result');

        fetch(host + uri,
            {
                method: methodName,
                headers:
                {
                    "Content-Type": "x-my-custom-header"
                }

            }).then(response => {
                if (response.ok) {
                    response.text().then(text => {
                        resultSpan.innerText = text;
                    });
                }
                else {
                    resultSpan.innerText = response.status;
                }
            })
            .catch(error => resultSpan.innerText = 'See F12 Console for error');
    }

</script>
